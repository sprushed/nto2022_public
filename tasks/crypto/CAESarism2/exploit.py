from pwn import remote, process
from Crypto.Util.strxor import strxor


def get_vs(r):
    r.sendline(b"encrypt_flag")
    enc_flag = r.recvline().decode().split()[1]
    enc_flag = bytes.fromhex(enc_flag[2:])
    vs = [enc_flag[i : i + 16] for i in range(0, len(enc_flag), 16)]
    return vs


def dec(payload: bytes, leng: int, r):
    r.sendline(b"check")
    r.sendline(hex(leng)[2:].zfill(2).encode() + payload.hex().encode())
    m = r.recvline()
    return b"Someone who smiles" in m


host, port = "localhost", 17778
r = remote(host, port)
#r = process("./CAESarism2.py")
vs = get_vs(r)

ans = b""
ri = 1
while ri != len(vs):
    reci = vs[ri]
    end = b""
    try:
        for i in range(16):
            guess = b"\x00" * (16 - i - 1)
            for j in range(256):
                payload = guess + bytes([j]) + end + reci
                if dec(payload, 32 - i - 1, r):
                    end = bytes([j]) + end
                    break

            out = guess + b" " * (i + 1)
            pay = payload[:16]
            decr = strxor(vs[ri - 1], pay)
            decr = strxor(decr, out)

            print(decr[-i - 1 :].decode("ascii"))
        ans += decr
    except:
        #r = process("./CAESarism2.py")
        r = remote(host, port)
        vs = get_vs(r)
        continue
    ri += 1

print(ans)
