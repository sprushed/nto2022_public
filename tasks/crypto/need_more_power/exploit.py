from pwn import remote, process, context
from sage.all import EllipticCurve, GF
from Crypto.Util.number import long_to_bytes

context.log_level = "error"
host, port = "localhost", 18181


def get_params(host, port):
    r = remote(host, port)
    params = r.recvline().decode()[:-1].split("=")[1].split(",")
    params = tuple([int(x) for x in params])
    r.close()
    return params


params = get_params(host, port)
a, b, p, x, y = params
e = EllipticCurve(GF(p), [a, b])
q = e.order()

nbit = p.bit_length()
a, b = 2 ** (nbit // 2), q

while True:
    try:
        r = remote(host, port)
        r.recvline()
        m = (a + b) // 2
        r.sendline(str(m).encode())
        ans = r.recvline()
        if b"Fortunately" in ans:
            break
        elif b"I've come" in ans:
            a = m + 1
        else:
            b = m - 1
        print(b - a)
    except:
        continue

scalar = (a + b) // 2
sc = pow(scalar, -1, q)
g = e((x, y)) * sc
l, r = g.xy()
l = int(l)
r = int(r)
print(long_to_bytes(l) + long_to_bytes(r))
