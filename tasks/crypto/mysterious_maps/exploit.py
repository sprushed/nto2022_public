from math import factorial

from Crypto.Util.number import bytes_to_long, long_to_bytes
from gmpy2 import mpz, next_prime

from output import c, e, k, n, num


def number_of_mysterious_maps(n, k):
    nn = factorial(n)
    ans = 0
    for j in range(k, n + 1):
        ans += nn * (-1) ** (j - k) // factorial(k) // factorial(j - k)
    return ans


p = int(next_prime(mpz(number_of_mysterious_maps(num, k))))
q = int(next_prime(mpz(number_of_mysterious_maps(num, num - k))))

d = pow(e, -1, (p - 1) * (q - 1))
m = pow(c, d, n)
print(long_to_bytes(m))
